@relation  cocomo81

%  4. Relevant Information
%
%    The software cost model measures effort in calendar months
%    of 152 hours (and includes development and management hours).
%    COCOMO assumes that the effort grows more than linearly on
%    software size; i.e. months=a* KSLOC^b*c. Here, "a" and "b" are
%    domain-specific parameters; "KSLOC" is estimated directly or
%    computed from a function point analysis; and "c" is the product
%    of over a dozen "effort multipliers". I.e.
%
%    months=a*(KSLOC^b)*(EM1* EM2 * EM3 * ...)
%
%    The effort multipliers are as follows:
%
%     increase | acap | analysts capability
%     these to | pcap | programmers capability
%    decrease  | aexp | application experience
%      effort  | modp | modern programing practices
%              | tool | use of  software tools
%              | vexp | virtual machine experience
%              | lexp | language experience
%    ----------+------+---------------------------
%              | sced | schedule constraint
%    ----------+------+---------------------------
%     decrease | stor | main memory constraint
%     these to | data | data base size
%     decrease | time | time constraint for cpu
%       effort | turn | turnaround time
%              | virt | machine volatility
%              | cplx | process complexity
%              | rely | required software reliability
%
%    The effort multipliers fall into three groups: those that are
%    positively correlated to more effort; those that are
%    negatively correlated to more effort; and a third group
%    containing just schedule information.

%    The standard numeric values of the effort multipliers are:
%
%      	        very				very	extra	productivity
%       	        low	low	nominal	high	high	high	range
%    ---------------------------------------------------------------------
%    acap	1.46   	1.19   	1.00   	0.86   	0.71   		2.06
%    pcap	1.42.  	1.17   	1.00   	0.86   	0.70 		1.67
%    aexp   	1.29   	1.13   	1.00   	0.91   	0.82   		1.57
%    modp   	1.24.  	1.10 	1.00 	0.91 	0.82 		1.34
%    tool   	1.24 	1.10 	1.00 	0.91 	0.83 		1.49
%    vexp   	1.21 	1.10 	1.00 	0.90 	  		1.34
%    lexp   	1.14 	1.07 	1.00 	0.95 	  		1.20
%    sced   	1.23 	1.08 	1.00 	1.04 	1.10 	  	e
%    stor   	       	       	1.00   	1.06   	1.21   	1.56	-1.21
%    data   	    	 0.94 	1.00 	1.08 	1.16		-1.23
%    time   	  	    	1.00   	1.11   	1.30   	1.66	-1.30
%    turn   	       	0.87   	1.00   	1.07   	1.15   		-1.32
%    virt   	       	0.87   	1.00   	1.15   	1.30   		-1.49
%    cplx   	0.70 	0.85 	1.00 	1.15 	1.30 	1.65	-1.86
%    rely   	0.75	 0.88	 1.00 	 1.15 	 1.40		-1.87
%
%
%     The last column of the above table shows max(E)/min(EM) and shows
%     the overall effect of a single effort multiplier. For example,
%     increasing "acap" (analyst experience) from very low to very
%     high will most decrease effort while increasing "rely"
%     (required reliability) from very low to very high will most
%     increase effort.
%
%     The value of an effort predictor can be reported many ways
%     including MMRE and PRED(N).MMRE and PRED are computed from the
%     relative error, or RE, which is the relative size of the
%     difference between the actual and estimated value:
%
%     RE.i = (estimate.i - actual.i) / (actual.i)
%
%     Given a data set of of size "D", a "Train"ing set of size
%     "(X=|Train|) <= D", and a "test" set of size "T=D-|Train|", then
%     the mean magnitude of the relative error, or MMRE, is the
%     percentage of the absolute values of the relative errors,
%     averaged over the "T" items in the "Test" set; i.e.
%
%     MRE.i  = abs(RE.i)
%     MMRE.i = 100/T*( MRE.1 + MRE.2 + ... + MRE.T)
%
%     PRED(N) reports the average percentage of estimates that were
%     within N% of the actual values:
%
%     count = 0
%     for(i=1;i<=T;i++) do if MRE.i <= N/100 then count++ fi done
%     PRED(N) = 100/T * count
%

%  5. Number of instances: 63

%  6. Number of attributes: 17 (all numeric: 15 for the effort multipliers,
%       one for LOC and one for actual development effort.

%  7. Attribute information:

@attribute rely numeric
@attribute data numeric
@attribute cplx numeric
@attribute time numeric
@attribute stor numeric
@attribute virt numeric
@attribute turn numeric
@attribute acap numeric
@attribute aexp numeric
@attribute pcap numeric
@attribute vexp numeric
@attribute lexp numeric
@attribute modp numeric
@attribute tool numeric
@attribute sced numeric
@attribute loc numeric
@attribute actual numeric

% 8. Missing attributes: none

% 9: Class distribution: the class value (actual) is continuous.
%    After sorting all the instances on actual, the following
%    distribution was found:
%    Instances     Range
%    ---------  ----------------
%      1 .. 10	  5.9 ..    15
%     11 .. 20	  18  ..    47
%     21 .. 30	  50  ..    87
%     31 .. 40	  88  ..   218
%     41 .. 50	 230  ..   539
%     51 .. 60 	 605  ..  2455
%     61 .. 63	6400  .. 11400

@data

0.88,1.16,0.7,1,1.06,1.15,1.07,1.19,1.13,1.17,1.1,1,1.24,1.1,1.04,1.1,1
0.88,1.16,0.85,1,1.06,1,1.07,1,0.91,1,0.9,0.95,1.1,1,1,2,1
1,1.16,0.85,1,1,0.87,0.94,0.86,0.82,0.86,0.9,0.95,0.91,0.91,1,1.3,1
0.75,1.16,0.7,1,1,0.87,1,1.19,0.91,1.42,1,0.95,1.24,1,1.04,1.6,1
0.88,0.94,1,1,1,0.87,1,1,1,0.86,0.9,0.95,1.24,1,1,2.2,3
0.75,1,0.85,1,1.21,1,1,1.46,1,1.42,0.9,0.95,1.24,1.1,1,3.4,4
0.75,1,1,1,1,0.87,0.87,1,1,1,0.9,0.95,0.91,0.91,1,1.6,1
1.15,0.94,1.3,1.66,1.56,1.3,1,0.71,0.91,1,1.21,1.14,1.1,1.1,1.08,2,1
1.15,0.94,1.3,1.3,1.21,1.15,1,0.86,1,0.86,1.1,1.07,0.91,1,1,3,4
1.4,0.94,1.3,1.11,1.56,1,1.07,0.86,0.82,0.86,0.9,1,1,1,1,2,3
1.4,0.94,1.3,1.11,1.56,1,1.07,0.86,0.82,0.86,0.9,1,1,1,1,3,2
1.15,0.94,1.3,1.11,1.06,1,1,0.86,0.82,0.86,1,0.95,0.91,1,1.08,3,2
1.15,0.94,1.3,1.11,1.06,1.15,1,0.71,1,0.7,1.1,1,0.82,1,1,2,7
1.15,0.94,1.65,1.3,1.56,1.15,1,0.86,1,0.7,1.1,1.07,1.1,1.24,1.23,1,1
1.4,0.94,1.3,1.3,1.06,1.15,0.87,0.86,1.13,0.86,1.21,1.14,0.91,1,1.23,1,1
1.4,1,1.3,1.3,1.56,1,0.87,0.86,1,0.86,1,1,1,1,1,6,2
1.4,1,1.3,1.3,1.56,1,0.87,0.86,0.82,0.86,1,1,1,1,1,3,2
1.15,1.16,1.15,1.3,1.21,1,1.07,0.86,1,1,1,1,1.24,1.1,1.08,5,11
1.15,1.08,1,1.11,1.21,0.87,0.94,0.71,0.91,1,1,1,0.91,0.91,1,10,7
1.4,1.08,1.3,1.11,1.21,1.15,1.07,0.71,0.82,1.08,1.1,1.07,1.24,1,1.08,5,6
1,1.16,1.15,1.06,1.14,0.87,0.87,0.86,1,1,1,1,0.91,0.91,1,2,2
1.15,1,1,1.27,1.06,1,1,0.86,0.82,0.86,0.9,1,0.91,1,1.23,1,3
1.15,1,1,1.08,1.06,1,1,0.86,0.82,0.86,0.9,1,1,1,1.23,7,4
0.88,1,0.85,1.06,1.06,1,0.87,1,1.29,1,1.1,0.95,0.82,0.83,1,9,2
1.15,1.16,1.3,1.15,1.06,1,0.87,0.86,1,0.86,1.1,1,0.82,0.91,1.08,3,3
0.94,1,0.85,1.07,1.06,1.15,1.07,0.86,1,0.86,1.1,1,0.91,1.1,1.08,4,2
1.15,0.94,1.15,1.35,1.21,1,0.87,1,1,1,1,1,0.82,1.1,1.08,9,1
1.15,1.08,1.3,1.11,1.21,1.15,1.07,0.86,1,0.86,1.1,1.07,1.1,1.1,1,1,1
0.88,1,1,1,1,1,1,1.1,1.29,0.86,1,1,0.91,0.91,1.23,2,1
0.88,1,1,1,1,1,1,1,1.29,0.86,1,1,0.91,0.91,1.23,1.9,1
1.4,1.08,1,1.48,1.56,1.15,1.07,0.86,0.82,0.86,1.1,1.07,1,1,1,6,5
0.88,1.08,0.85,1,1,1,1,0.71,0.82,1,1,1,1.1,1.1,1,3,3
1.4,1.08,1.3,1.48,1.56,1.15,0.94,0.86,0.82,0.86,0.9,1,0.91,0.91,1,4,4
1.15,1.08,1,1.06,1,1,0.87,1,1,1,1,1,0.91,1.1,1.23,2,4
0.75,0.94,1.3,1.06,1.21,1.15,1,1,0.91,1,1.1,1,1.24,1.24,1,1,2
0.88,1.05,0.81,1,1,0.87,0.87,1.19,1,1.17,0.9,0.95,1,0.91,1.04,1,1
0.88,0.94,0.7,1,1.06,1,1,0.86,0.82,0.86,1,1,1,1,1,6,1
1,1,1.15,1,1,0.87,0.87,0.71,0.91,1,0.9,0.95,0.82,0.91,1,1,1
1,1,1.15,1,1,0.87,1,0.71,0.82,0.7,1,0.95,0.91,1.1,1,6,1
1,0.94,1.3,1,1,1,0.87,0.86,0.82,1.17,1,1,1.1,1,1,3,2
0.88,0.94,1,1,1,0.87,0.87,1,0.82,0.7,0.9,0.95,0.91,0.91,1,5,1
0.88,1.04,1.07,1,1.06,0.87,1.07,0.86,1,0.93,0.9,0.95,0.95,0.95,1.04,4,1
1,1.04,1.07,1,1.21,0.87,1.07,0.86,1,1,0.9,0.95,1,1,1.04,2.8,1
0.88,1.04,1.07,1.06,1.21,0.87,1.07,1,1,1,0.9,0.95,1.1,1,1.04,3,1
0.88,1.04,1.07,1,1.06,0.87,1.07,1,1,1,0.9,0.95,1,0.95,1.04,3,2
0.88,1.04,1.07,1,1.06,0.87,1.07,1,1,0.86,0.9,0.95,1,1,1.04,7,2
0.75,0.94,1.3,1,1,0.87,0.87,0.71,0.82,0.7,1.1,1.07,1.1,1,1.04,2,1
0.88,0.94,0.85,1,1,0.87,1,1.19,0.91,1.17,0.9,0.95,1.1,1,1.04,4,5
1,1,0.85,1,1,1,0.87,0.71,1,0.7,1.1,1,0.82,0.91,1,9,2
1.15,1,1,1.3,1.21,1,0.87,0.86,1,0.86,1.1,1,1,1,1,2,2
0.88,1,1,1,1,1,1.15,1.19,1,1.42,1,0.95,1.24,1.1,1.04,1,2
0.88,0.94,0.85,1,1.06,1.15,1,1,1,1,1.1,1.07,1.24,1.1,1,8,1
0.88,0.94,1.15,1.11,1.21,1.3,1,0.71,1,0.7,1.1,1.07,1,1.1,1.08,5,1
1,0.94,1,1,1.06,1.15,0.87,1,0.82,1,1,0.95,0.91,1.1,1,4,1
0.88,0.94,0.7,1,1,0.87,0.87,0.86,0.82,1.17,0.9,0.95,1.1,1,1,6,1
1.15,0.94,1.3,1.3,1.21,1,1,0.86,0.91,1,1.1,1.07,1.1,1.1,1.08,2,5
1,0.94,1.15,1.11,1.21,1.3,1,1,1,1,1.1,1.07,1.1,1.1,1.23,1,3
1.4,0.94,1.3,1.66,1.21,1,1,0.71,0.82,0.7,0.9,0.95,0.91,1,1,2,2
1,0.94,1.15,1.06,1.06,1,0.87,1,1,1,1,1,0.91,1,1,2,1
1.15,0.94,1.3,1.11,1.06,1,1,0.86,1.13,0.86,1.1,1.07,1.1,1.1,1.08,6,1
1,0.94,1.15,1,1,0.87,0.87,0.86,1,0.86,0.9,1,0.82,1,1,2,1
0.88,0.94,1.3,1.11,1.21,1.15,1,0.78,0.82,0.7,1.21,1.14,0.91,1.24,1,9,1
1,0.94,1.15,1,1,1,0.87,0.71,0.82,0.86,1,1,0.82,1,1,1,1